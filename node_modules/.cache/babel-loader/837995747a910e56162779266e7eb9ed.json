{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\OneDrive\\\\Desktop\\\\Movie-Browser-main\\\\src\\\\components\\\\home.js\";\nimport Hero from \"./hero\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      text: \"welcome to Home page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ccontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8 offset-lg-2 my-5\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Lead\",\n            children: \"\\u201CLorem ipsum\\u201D dummy text is used by many web-developers to test how their HTML templates will look with real data. Often, developers use third-party services to generate \\u201CLorem ipsum\\u201D text, but now you can do that right in your editor. Just expand lorem or lipsum abbreviations to get the following snippet:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Hero","Home"],"sources":["C:/Users/lenovo/OneDrive/Desktop/Movie-Browser-main/src/components/home.js"],"sourcesContent":["import Hero from \"./hero\";\n\nconst Home=()=>{\n    return(\n        <>\n        <Hero text=\"welcome to Home page\"/>\n        \n        <div className=\"ccontainer\">\n            <div className=\"row\">\n                <div className=\"col-lg-8 offset-lg-2 my-5\">\n                    <p className=\"Lead\">\n                    “Lorem ipsum” dummy text is used by many web-developers to test how their HTML templates will look with real data. Often, developers use third-party services to generate “Lorem ipsum” text, but now you can do that right in your editor. Just expand lorem or lipsum abbreviations to get the following snippet:\n                    </p>\n                </div>\n            </div>\n        </div>\n        </>\n        )\n}\n\nexport default Home;"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,IAAI,GAAC,MAAI;EACX,oBACI;IAAA,wBACA,QAAC,IAAD;MAAM,IAAI,EAAC;IAAX;MAAA;MAAA;MAAA;IAAA,QADA,eAGA;MAAK,SAAS,EAAC,YAAf;MAAA,uBACI;QAAK,SAAS,EAAC,KAAf;QAAA,uBACI;UAAK,SAAS,EAAC,2BAAf;UAAA,uBACI;YAAG,SAAS,EAAC,MAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADJ;AAeH,CAhBD;;KAAMA,I;AAkBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}